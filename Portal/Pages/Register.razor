@page "/register"
@inject IUserEndpoint UserEndpoint
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavManager

<h3>Create An Account</h3>

<EditForm Model="@userModel" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group row">
        <label for="first-name" class="col-md-2 col-form-label">First Name: </label>
        <div class="col-md-10">
            <InputText id="first-name" class="form-control" @bind-Value="userModel.FirstName"></InputText>
            <ValidationMessage For="@(() => userModel.FirstName)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="last-name" class="col-md-2 col-form-label">Last Name: </label>
        <div class="col-md-10">
            <InputText id="last-name" class="form-control" @bind-Value="userModel.LastName"></InputText>
            <ValidationMessage For="@(() => userModel.LastName)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="email" class="col-md-2 col-form-label">Email Address: </label>
        <div class="col-md-10">
            <InputText id="email" class="form-control" @bind-Value="userModel.EmailAddress"></InputText>
            <ValidationMessage For="@(() => userModel.EmailAddress)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="password" class="col-md-2 col-form-label">Password: </label>
        <div class="col-md-10">
            <InputText type="password" id="password" class="form-control" @bind-Value="userModel.Password"></InputText>
            <ValidationMessage For="@(() => userModel.Password)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="confirm-password" class="col-md-2 col-form-label">Confirm Password: </label>
        <div class="col-md-10">
            <InputText type="password" id="confirm-password" class="form-control" @bind-Value="userModel.ConfirmPassword"></InputText>
            <ValidationMessage For="@(() => userModel.ConfirmPassword)" />
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-12 text-right">
            <button type="submit" class="btn btn-success">Create Account</button>
        </div>
    </div>
</EditForm>

@code {
    CreateUserModel userModel = new CreateUserModel();
    string errorMessage;

    private async Task OnValidSubmit()
    {
        errorMessage = "";

        try
        {
            await UserEndpoint.CreateUser(userModel);

            var result = await AuthenticationService.Login(new(){Email = userModel.EmailAddress, Password = userModel.Password} );

            if (result is not null)
            {
                NavManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "Account was registered but error occured when trying to log in.";
            }
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }
}
